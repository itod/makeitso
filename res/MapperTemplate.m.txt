#import "{{class.name}}Mapper.h"
#import "{{class.name}}.h"

#import <fmdb/FMResultSet.h>
#import <fmdb/FMDatabase.h>

@implementation {{class.name}}Mapper

- (id)initWithDomainClass:(Class)cls {
    self = [super init];
    if (self) {
        self.tableName = @"{{tableName}}";
        self.selectColumnList = @"{{selectColumnList}}";
        self.columnNames = @[{%for field in class.fields%}
            @"{{field.name}}",{%/for%}
        ];
    }
    return self;
}


- (void)loadFields:(FMResultSet *)rs inObject:(DomainObject *)obj {
    TDAssertDatabaseThread();
{%for field in class.fields %}
    {{%if 'NSString' == field.rawType %}
        NSString *val = [rs stringForColumn:@"{{field.name}}"];
    {%elif 'NSNumber' == field.rawType %}
        NSNumber *val = [rs objectForColumnName:@"{{field.name}}"];
    {%elif 'NSDate' == field.rawType %}
        long long timestamp = [rs longLongForColumnName:@"{{field.name}}"];
        NSDate *val = [NSDate dateWithTimeIntervalSince1970:timestamp];
    {%elif 'NSData' == field.rawType %}
        NSData *val = [rs dataForColumnName:@"{{field.name}}"];
    {%else%}
        DomainObject *val = [rs objectForColumnName:@"{{field.name}}"];
    {%/if%}    [obj setValue:val forKey:@"{{field.name}}"];
    }{%/for%}
}


- (void)performInsert:(DomainObject *)obj {
    TDAssertDatabaseThread();
    if (!obj.objectID) return;
    
    NSString *sql = @"INSERT INTO {{tableName}} ({{selectColumnList}}) VALUES ({{insertColumnList}})";
    
    NSMutableArray *args = [NSMutableArray arrayWithCapacity:[self.columnNames count]];
{%for field in class.fields %}
    {{%if 'NSString' == field.rawType %}
        NSString *val = [obj valueForKey:@"{{field.name}}"];
    {%elif 'NSNumber' == field.rawType %}
        NSNumber *val = [obj valueForKey:@"{{field.name}}"];
    {%elif 'NSDate' == field.rawType %}
        NSDate *date = [obj valueForKey:@"{{field.name}}"];
        NSNumber *val = @([date timeIntervalSince1970]);
    {%elif 'NSData' == field.rawType %}
        NSData *val = [obj valueForKey:@"{{field.name}}"];
    {%else%}
        DomainObject *val = [obj valueForKey:@"{{field.name}}"];
    {%/if%}    [args addObject:val];
    }{%/for%}
    
    BOOL success = NO;
    @try {
        success = [self.database executeUpdate:sql withArgumentsInArray:args];
    }
    @catch (NSException *ex) {
        NSLog(@"%@", ex);
    }
    @finally {
        
    }
}


- (void)update:(DomainObject *)obj {
    TDAssertDatabaseThread();
    if (!obj.objectID) return;
    
    NSString *sql = @"UPDATE {{tableName}} SET {{updateColumnList}} WHERE objectID = ?";
    
    NSMutableArray *args = [NSMutableArray arrayWithCapacity:[self.columnNames count]];
{%for field in class.fields %}
    {{%if 'NSString' == field.rawType %}
        NSString *val = [obj valueForKey:@"{{field.name}}"];
    {%elif 'NSNumber' == field.rawType %}
        NSNumber *val = [obj valueForKey:@"{{field.name}}"];
    {%elif 'NSDate' == field.rawType %}
        NSDate *date = [obj valueForKey:@"{{field.name}}"];
        NSNumber *val = @([date timeIntervalSince1970]);
    {%elif 'NSData' == field.rawType %}
        NSData *val = [obj valueForKey:@"{{field.name}}"];
    {%else%}
        DomainObject *val = [obj valueForKey:@"{{field.name}}"];
    {%/if%}    [args addObject:val];
    }{%/for%}
    
    BOOL success = NO;
    @try {
        success = [self.database executeUpdate:sql withArgumentsInArray:args];
    }
    @catch (NSException *ex) {
        NSLog(@"%@", ex);
    }
    @finally {
        
    }
}

@end