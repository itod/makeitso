#import "{{class.name}}Mapper.h"
#import "{{class.name}}.h"

@implementation {{class.name}}Mapper

- (id)initWithDomainClass:(Class)cls {
    self = [super init];
    if (self) {
        self.tableName = {{tableName}};
        self.columnList = @"{{columnList}}";
        self.columnNames = @[{%for field in class.fields%}
            @"{{field.name}}",{%/for%}
        ];
    }
    return self;
}


- (void)loadFields:(FMResultSet *)rs inObject:(DomainObject *)obj {
    TDAssertDatabaseThread();
{%for field in class.fields %}
    {{%if 'NSString' == field.rawType %}
        NSString *val = [rs stringForColumnName:@"{{field.name}}"];
    {%elif 'NSNumber' == field.rawType %}
        NSNumber *val = [rs objectForColumnName:@"{{field.name}}"];
    {%elif 'NSDate' == field.rawType %}
        long long timestamp = [rs longLongForColumnName:@"{{field.name}}"];
        NSDate *val = [NSDate dateWithTimeIntervalSince1970:timestamp];
    {%elif 'NSData' == field.rawType %}
        NSData *val = [rs dataForColumnName:@"{{field.name}}"];
    {%else%}
        DomainObject *val = [rs objectForColumnName:@"{{field.name}}"];
    {%/if%}    [obj setValue:val forKey:@"{{field.name}}"];
    }{%/for%}
}

@end